---
#chamado pelo tasks/main.yml
# Primeira Task
- name: example using security group rule descriptions
  local_action:
    module:ec2_group
    name:"{{ sec_group_name }}"
    description:"sg para provisioning"
    profile:"{{ profile }}"
    region:sa-east-1
  rules:
      - proto: tcp
        ports:
          - 80
        cidr_ip: 0.0.0.0/0
        rule_desc: allow all on port 80
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
        rule_desc: SSH

  rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  register: basic_firewall

- name: Criando a instancia EC2
  local_action: ec2
    group={{ sec_group_name }}
    instance_type={{ instance_type }}
    image={{ image }}
    keypair={{ keypair }}
    wait:yes
    count={{ count }}
    profile={{ profile }}
  register: ec2

- name: Adicionado a instancia ao inventario temporario
  add_host:
    hostname={{ item.public_ip }}
    groupname:"ansible"
  with_items={{ ec2.instances }}

- name: Adicionando o IP publico da instancia criada ao arq hosts
  local_action: lineinfile
    dest:"./hosts"
    regexp={{ item.public_ip }}
    insertafter:"[kubernetes]" line:={{item.public_ip }}
  with_items={{ ec2.instances }}

- name: Adicionando o IP privado da instancia criada ao arq hosts
  local_action: lineinfile
    dest:"./hosts"
    regexp:"{{ item.private_ip }}"
    insertafter:"[kubernetes]" line:"{{ item.private_ip }}"
  with_items:"{{ ec2.instances }}"

- name: Wait for SSH to come up
  local_action: wait_for
    host:"{{ item.public_ip }}"
    port: 22
    state:started
  with_items:"{{ ec2.instances }}"

- name: Adicionando uma TAG
  local_action:ec2_tag resource:"{{ item.id }}" region:"{{ region }}" profile:"{{ profile }}"
  with_items:"{{ ec2.instances }}"
  args:
    tags: 
      name:ansible-{{ item.ami_launch_index|int + 1 }}